{"version":3,"sources":["../iterator.js"],"names":["_regenerator","require","_regenerator2","_interopRequireDefault","obj","__esModule","default","_marked","mark","makeIterator","arr","i","wrap","makeIterator$","_context","prev","next","length","age","stop","it","name","console","log","value","done"],"mappings":"AAAA;;AAEA,IAAIA,eAAeC,QAAQ,2BAAR,CAAnB;;AAEA,IAAIC,gBAAgBC,uBAAuBH,YAAvB,CAApB;;AAEA,SAASG,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,SAAOA,OAAOA,IAAIC,UAAX,GAAwBD,GAAxB,GAA8B,EAAEE,SAASF,GAAX,EAArC;AAAwD;;AAE/F,IAAIG,UAAU,aAAaL,cAAcI,OAAd,CAAsBE,IAAtB,CAA2BC,YAA3B,CAA3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAASA,YAAT,CAAsBC,GAAtB,EAA2B;AACzB,MAAIC,CAAJ;AACA,SAAOT,cAAcI,OAAd,CAAsBM,IAAtB,CAA2B,SAASC,aAAT,CAAuBC,QAAvB,EAAiC;AACjE,WAAO,CAAP,EAAU;AACR,cAAQA,SAASC,IAAT,GAAgBD,SAASE,IAAjC;AACE,aAAK,CAAL;AACEL,cAAI,CAAJ;;AAEF,aAAK,CAAL;AACE,cAAI,EAAEA,IAAID,IAAIO,MAAV,CAAJ,EAAuB;AACrBH,qBAASE,IAAT,GAAgB,CAAhB;AACA;AACD;;AAEDF,mBAASE,IAAT,GAAgB,CAAhB;AACA,iBAAON,IAAIC,CAAJ,EAAOO,GAAd;;AAEF,aAAK,CAAL;AACEP;AACAG,mBAASE,IAAT,GAAgB,CAAhB;AACA;;AAEF,aAAK,CAAL;AACA,aAAK,KAAL;AACE,iBAAOF,SAASK,IAAT,EAAP;AApBJ;AAsBD;AACF,GAzBM,EAyBJZ,OAzBI,EAyBK,IAzBL,CAAP;AA0BD;;AAED,IAAIa,KAAKX,aAAa,CAAC;AACrBY,QAAM,IADe;AAErBH,OAAK;AAFgB,CAAD,EAGnB;AACDG,QAAM,IADL;AAEDH,OAAK;AAFJ,CAHmB,EAMnB;AACDG,QAAM,IADL;AAEDH,OAAK;AAFJ,CANmB,CAAb,CAAT;AAUAI,QAAQC,GAAR,CAAY,IAAZ,EAAkBH,GAAGJ,IAAH,GAAUQ,KAA5B;AACAF,QAAQC,GAAR,CAAY,IAAZ,EAAkBH,GAAGJ,IAAH,GAAUQ,KAA5B;AACAF,QAAQC,GAAR,CAAY,IAAZ,EAAkBH,GAAGJ,IAAH,GAAUQ,KAA5B;AACAF,QAAQC,GAAR,CAAY,IAAZ,EAAkBH,GAAGJ,IAAH,GAAUS,IAA5B;AACA","file":"iterator.js","sourcesContent":["'use strict';\n\nvar _regenerator = require('babel-runtime/regenerator');\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _marked = /*#__PURE__*/_regenerator2.default.mark(makeIterator);\n\n// //最原始的迭代器\n// function makeIterator(arr) {\n//   let nextIndex = 0\n//   return {\n//     next: () => {\n//       if (nextIndex < arr.length) {\n//         return {\n//           value: arr[nextIndex++],\n//           done: false\n//         }\n//       } else {\n//         return { done: true }\n//       }\n//     }\n//   }\n// }\n\n// const it = makeIterator(['aa', 'bb', 'cc'])\n// console.log('首先', it.next().value)\n// console.log('然后', it.next().value)\n// console.log('最后', it.next().value)\n// console.log('最后', it.next().value)\n\n//生成器\nfunction makeIterator(arr) {\n  var i;\n  return _regenerator2.default.wrap(function makeIterator$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          i = 0;\n\n        case 1:\n          if (!(i < arr.length)) {\n            _context.next = 7;\n            break;\n          }\n\n          _context.next = 4;\n          return arr[i].age;\n\n        case 4:\n          i++;\n          _context.next = 1;\n          break;\n\n        case 7:\n        case 'end':\n          return _context.stop();\n      }\n    }\n  }, _marked, this);\n}\n\nvar it = makeIterator([{\n  name: 'aa',\n  age: 15\n}, {\n  name: 'bb',\n  age: 16\n}, {\n  name: 'cc',\n  age: 17\n}]);\nconsole.log('首先', it.next().value);\nconsole.log('然后', it.next().value);\nconsole.log('最后', it.next().value);\nconsole.log('最后', it.next().done);\n//# sourceMappingURL=iterator.js.map"]}