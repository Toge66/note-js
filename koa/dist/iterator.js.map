{"version":3,"sources":["../test/iterator.js"],"names":["makeIterator","arr","i","length","age","it","name","console","log","next","value","done"],"mappings":";;;;;;;;sDAwBWA,Y;;AAxBX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAWA,YAAX,CAAwBC,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AACWC,WADX,GACe,CADf;;AAAA;AAAA,gBACkBA,IAAID,IAAIE,MAD1B;AAAA;AAAA;AAAA;;AAAA;AAAA,iBAEUF,IAAIC,CAAJ,EAAOE,GAFjB;;AAAA;AACkCF,aADlC;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQA,IAAMG,KAAKL,aAAa,CAAC;AACvBM,QAAK,IADkB;AAEvBF,OAAK;AAFkB,CAAD,EAGrB;AACDE,QAAK,IADJ;AAEDF,OAAK;AAFJ,CAHqB,EAMrB;AACDE,QAAK,IADJ;AAEDF,OAAK;AAFJ,CANqB,CAAb,CAAX;AAUAG,QAAQC,GAAR,CAAY,IAAZ,EAAkBH,GAAGI,IAAH,GAAUC,KAA5B;AACAH,QAAQC,GAAR,CAAY,IAAZ,EAAkBH,GAAGI,IAAH,GAAUC,KAA5B;AACAH,QAAQC,GAAR,CAAY,IAAZ,EAAkBH,GAAGI,IAAH,GAAUC,KAA5B;AACAH,QAAQC,GAAR,CAAY,IAAZ,EAAkBH,GAAGI,IAAH,GAAUE,IAA5B","file":"iterator.js","sourcesContent":["// //最原始的迭代器\n// function makeIterator(arr) {\n//   let nextIndex = 0\n//   return {\n//     next: () => {\n//       if (nextIndex < arr.length) {\n//         return {\n//           value: arr[nextIndex++],\n//           done: false\n//         }\n//       } else {\n//         return { done: true }\n//       }\n//     }\n//   }\n// }\n\n// const it = makeIterator(['aa', 'bb', 'cc'])\n// console.log('首先', it.next().value)\n// console.log('然后', it.next().value)\n// console.log('最后', it.next().value)\n// console.log('最后', it.next().value)\n\n//生成器\nfunction * makeIterator(arr) {\n  for (let i = 0; i < arr.length; i++) {\n    yield arr[i].age\n  }\n}\n\n\n\nconst it = makeIterator([{\n  name:'aa',\n  age: 15\n}, {\n  name:'bb',\n  age: 16\n}, {\n  name:'cc',\n  age: 17\n}])\nconsole.log('首先', it.next().value)\nconsole.log('然后', it.next().value)\nconsole.log('最后', it.next().value)\nconsole.log('最后', it.next().done)\n"]}